server:
  forward-headers-strategy: framework
  shutdown: graceful
  port: 8080

mail:
  debug: false

jwt:
  expiration: 86400

spring:
  mail:
    host: mail.hosting.reg.ru
    username: ***REMOVED***
    password: ***REMOVED***
    port: 465
    protocol: smtps
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  application:
    name: @project.name@
  rabbitmq:
    publisher-returns: true
    cache:
      channel:
        size: 25
      connection:
        mode: CONNECTION
  cloud:
    stream:
      rabbit:
        bindings:
          ocrBackendMachineLearningResult-in-0:
            consumer:
                autoBindDlq: true
                dlqTtl: 300000 #5min
                dlqDeadLetterExchange:
                prefetch: 20
                queueNameGroupOnly: true
      bindings:
        ocrBackendMachineLearningResult-in-0:
          destination: ocr.modelpipeline.run
          group: ocrBackend.ml.result
          binder: defaultRabbit
          consumer:
            concurrency: 3
            max-attempts: 1
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: /
  web:
    locale: en_GB
    locale-resolver: fixed
  jpa:
    show-sql: false
    properties:
      hibernate:
        generate_statistics: false
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 100

  liquibase:
    change-log: classpath:db/changelog/liquibase-changelog.xml
    enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ocrdatabase?ApplicationName=ocr_backend"
    username: pguser
    password: secret
    hikari:
      leak-detection-threshold: 10000
      maximum-pool-size: 10
      maxLifetime: 1800000 # 30min
      connectionTimeout: 30000 # 30sec
      idleTimeout: 600000 # 10min
      data-source-properties:
        reWriteBatchedInserts: true


yandex-s3:
  accessKey: "***REMOVED***"
  secretKey: "***REMOVED***"
  bucket: "***REMOVED***"
  serviceEndpoint: "https://storage.yandexcloud.net"
  signingRegion: "ru-central1"


machineLearning:
  batchSize: 2
  modelType: "YOLO8"
  epoch: 50


management:
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
      show-details: ALWAYS
    prometheus:
      enabled: true
    env:
      enabled: true
    mappings:
      enabled: true
    metrics:
      enabled: true
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info, health, prometheus, env, mappings, metrics
      path-mapping:
        info: actuator/info
        health: actuator/health
        prometheus: metrics
        env: actuator/env
        mappings: actuator/mappings
        metrics: actuator/metrics
    enabled-by-default: false


logging:
  level:
    ROOT: INFO
    org.zalando.logbook.Logbook: TRACE
    org.hibernate.SQL: ERROR  # DEBUG for sql logging
    org.hibernate.type: ERROR # TRACE for sql logging
    org.hibernate.stat: ERROR # DEBUG for statistics logging
    org.springframework.orm.jpa: ERROR # TRACE for transactions logging
    #    net.ttddyy.dsproxy.listener: DEBUG # DEBUG enable logging for datasource-proxy
    org.springframework.transaction.interceptor: ERROR # TRACE for transactions logging
  pattern:
    console: "${spring.application.name} %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %X{traceId} - %msg%n"