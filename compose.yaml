services:
  db:
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_DB: ocrdatabase
      POSTGRES_PASSWORD: secret
      PGDATA: /data/postgres
      POSTGRES_USER: pguser
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 30s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 30s
      retries: 10
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    container_name: app
    environment:
      SPRING_PROFILES_ACTIVE: docker-compose
      DB_URL: db
      DB_USER: pguser
      DB_PASS: secret
      DB_NAME: ocrdatabase
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9091:9091"
    environment:
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=admin
    volumes:
      - ./caddy:/etc/caddy
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

volumes:
  rabbitmq:
  postgres:
  prometheus_data: { }
  grafana_data: { }