services:
  db:
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_DB: ocrdatabase
      POSTGRES_PASSWORD: secret
      PGDATA: /data/postgres
      POSTGRES_USER: pguser
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 30s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 30s
      retries: 10
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker-compose
      DB_URL: db
      DB_USER: pguser
      DB_PASS: secret
      DB_NAME: ocrdatabase
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres: